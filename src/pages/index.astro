---
import DefaultLayout from '@layouts/DefaultLayout.astro';
import IconItem from '@components/IconItem.astro';
import {
  getCollection,
  getEntry,
} from 'astro:content';

interface FontAwesomeClass {
  category: 'solid' | 'brands' | null;
  icon: 'string' | null;
}

function findServiceName(url: string): 'github' | 'gitlab' | null {
  if (url.startsWith('https://github.com')) {
    return 'github';
  } else if (url.startsWith('https://gitlab.com')) {
    return 'gitlab';
  } else {
    return null;
  }
}

function makeFontAwesomeClassFromServiceName(service: string | null) : FontAwesomeClass {
  switch (service) {
    case 'github':
      return { category: 'brands', icon: 'github' };
    case 'gitlab':
      return { category: 'brands', icon: 'gitlab' };
    default:
      return { category: null, icon: null };
  }
}

const { data: headings } = await getEntry('headings', 'index');
const { data: card } = await getEntry('cards', '2025');
const repositories = await getCollection('repositories');
---
<DefaultLayout
  headings={headings}
  description=""
>
  <main id="index">
    <section id="link-card">
      <img src="/images/myface.png" alt="func_hsのSNSアイコンです。" id="my-face" />
      <h2>
        <span>func</span>
        <span>::</span>
        <span>自由</span>
        <span>-&gt;</span>
        <span>ビジネス</span>
      </h2>
    </section>
    <section id="link-goals">
      <h2>目標</h2>
      <ol id="goals">{card.goals.map(goal =>
        <li>
          <h3>{goal.slogan}</h3>
          <p>{goal.description}</p>
          <ul class="todos">{goal.todos.map(todo => <IconItem category="solid" icon={'square' + (todo.completed ? '-check' : '')}>{todo.text}</IconItem>)}</ul>
        </li>)}
      </ol>
    </section>
    <section id="link-repositories">
      <h2>リポジトリ</h2>
      <ul id="repositories">{repositories.map(({ id, data: repository }) => (
        <li id={id}>
          <img src={repository.logo.src} alt={repository.logo.alt} />
          <div>
            <h3>{repository.name}</h3>
            <p>{repository.description}</p>
            <ul class="links">
              <IconItem {...makeFontAwesomeClassFromServiceName(findServiceName(repository.links.repository))}><a href={repository.links.repository}>リポジトリ</a></IconItem>
              {repository.links.documents?.base ? <IconItem category="solid" icon="book"><a href={repository.links.documents.base}>ドキュメント</a></IconItem> : null}
            </ul>
          </div>
        </li>
      ))}</ul>
    </section>
    <section id="link-donation">
      <h2>寄付</h2>
      <ul id="donations">
        <IconItem category="brands" icon="paypal"><a href="https://paypal.me/funchs">PayPal Me</a></IconItem>
      </ul>
    </section>
  </main>
</DefaultLayout>

<style lang="scss">
  #index {
    section {
      @include section-layout;
    }

    #link-card {
      display: grid;
      grid-template-rows: 50% 1fr;
      justify-content: center;
      align-content: center;
      gap: 1rem;

      #my-face {
        @include image-sizing(400px, 400px);

        justify-self: center;
        align-self: center;
      }

      h2 {
        display: grid;
        grid-template-columns: repeat(5, auto);
        justify-content: center;
        gap: 1rem;
      }
    }

    #goals {
      @include list-with-headings;

      margin: 0 $theme-h2-size;
    }

    #repositories {
      & > li {
        @include grid-with-image;

        &:not(:last-child) {
          margin-bottom: $theme-h3-size;
        }
      }

      img {
        @include image-sizing(640px, 640px);
      }
    }

    :is(#goals .todos, #repositories .links, #donations) {
      @include list-with-fa;
    }
  }
</style>
